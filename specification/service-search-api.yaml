openapi: "3.0.0"
info:
  description: |
    ## Overview   
    Use this API to find information about organisations that provide NHS healthcare services, NHS organisation types, and coronavirus (COVID-19) walk-in sites.

    You can:
    * retrieve a list of organisation types, for example, GP practices or hospitals
    * search for NHS organisations that provide healthcare services listed in [NHS service near you](https://www.nhs.uk/nhs-services/services-near-you/), for example, Leeds General Infirmary
    * search for coronavirus (COVID-19) walk-in sites
    
    ## Who can use this API
    This API can only be used where there is a legal basis to do so. Make sure you have a valid use case before you go too far with your development. To do this, [contact us](https://digital.nhs.uk/developer/help-and-support). You must do this before you can go live (see ‘Onboarding’ below).

    ## Related APIs
    The following APIs are related to this API:

    * [Directory of Services - Urgent and Emergency Care - SOAP API](https://digital.nhs.uk/developer/api-catalogue/directory-of-services-soap) - use this SOAP API to access information on a wide range of health and care services across England
    * [Directory of Services - Urgent and Emergency Care - REST API](https://digital.nhs.uk/developer/api-catalogue/directory-of-services-urgent-and-emergency-care-rest) - use this REST API to access information on a wide range of health and care services across England
    * [EPS Directory of Services - REST API](https://digital.nhs.uk/developer/api-catalogue/electronic-prescription-service-directory-of-services) - use this to access information about dispensing services, including searching for dispensers who can provide services for a patient with a given location and urgency
    * [Electronic Transmission of Prescriptions Web Services - SOAP API](https://digital.nhs.uk/developer/api-catalogue/electronic-transmission-of-prescriptions-web-services-soap) - use this to access EPS dispenser (and dispensing appliance contractor) information for a patient via NHS UK Web Services
    * [e-Referral Services - A010 Patient service search endpoint](https://digital.nhs.uk/developer/api-catalogue/e-referral-service-fhir#api-Default-a010-patient-service-search) - use this endpoint to find services that meet the referral needs of a patient
    
    ## API status and roadmap
    This API is [in development](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#statuses), meaning:
      * it is available for testing in the integration environment
      * we expect to make breaking changes based on developer feedback
    
    ### Roadmap
    To see our roadmap, or to suggest, comment or vote on features for this API, see our [interactive product backlog](https://nhs-digital-api-management.featureupvote.com/?order=popular&filter=allexceptdone&tag=service-search-api#controls).
    If you have any other queries, please [contact us](https://digital.nhs.uk/developer/help-and-support).

    ## Service level
    This API is a bronze service, meaning it is operational and supported only during business hours (8am to 6pm), Monday to Friday excluding bank holidays.
    For more details, see [service levels](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#service-levels).

    ## Technology
    This API is [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#basic-rest).

    ## Network access
    This API is available on the internet and, indirectly, on the [Health and Social Care Network (HSCN)](https://digital.nhs.uk/services/health-and-social-care-network).
    For more details see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).

    ## Security and authorisation
    This API is [application-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#application-restricted-apis),
    meaning we authenticate the calling application but not the end user.

    To use this API, use the following security pattern:
    * [application-restricted RESTful API - API key authentication](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/application-restricted-restful-apis-api-key-authentication)

    ## Environments and testing

    | Environment       | Base URL                                                  |
    | ----------------- |---------------------------------------------------------- |
    | Sandbox           | `https://sandbox.api.service.nhs.uk/service-search-api/`    |
    | Integration test  | `https://int.api.service.nhs.uk/service-search-api/`        |
    | Production        | Not yet available         |

    ### Sandbox testing
    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):
    * is for early developer testing
    * only covers a limited set of scenarios
    * is open access, so does not allow you to test authorisation
    
    For details of sandbox test scenarios, or to try out the sandbox using our 'Try this API' feature, see the documentation for each endpoint.
    
    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing) is for formal integration testing.
    
    ### Integration testing
    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):
    * is for formal integration testing
    * includes authorisation, with options for appliation-restricted access
    * test data is a close copy of the production data
    
    For more details see [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).

    ### Rate Limiting
    The integration test environment is rate limited to 1500 requests per week and 1 request per second.

    ## Onboarding
    This API is not yet available for onboarding.

    ## Errors
    We use standard HTTP status codes to show whether an API request succeeded or not. They are usually in the range:

    * 200 to 299 if it succeeded, including code 202 if it was accepted by an API that needs to wait for further action
    * 400 to 499 if it failed because of a client error by your application
    * 500 to 599 if it failed because of an error on our server
    
    Errors specific to each API are shown in the Endpoints section, under Response. See our [reference guide](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#http-status-codes) for more on errors.

  version: "Computed and injected at build time by `scripts/set_version.py`"
  title: "Directory of Healthcare Services API - version 3"
  contact:
    name: "Directory of Healthcare Services API - version 3"
    url: "https://digital.nhs.uk/developer/help-and-support"
    email: api.management@nhs.net
servers:
  - url: "https://sandbox.api.service.nhs.uk/service-search-api"
    description: Sandbox environment.
  - url: "https://int.api.service.nhs.uk/service-search-api"
    description: Integration test environment.
  - url: "https://api.service.nhs.uk/service-search-api"
    description: Production environment.
tags:
  - name: Organisation
  - name: OrganisationType
  - name: SearchPostcode
security:
  - OAuth_Token: []
paths:
  "/":
    get:
      summary: Search for organisations
      operationId: search-GET
      description: |
        ## Overview
        Use this endpoint to find information about services provided by NHS organisations.

        For more information on how to use search identifiers with this endpoint, see [DoHS API guide to search identifiers and service codes](https://digital.nhs.uk/developer/api-catalogue/directory-of-healthcare-services/guide-to-search-identifiers-and-service-codes).
        
        ## Sandbox test scenarios
        You can test the following scenarios in our sandbox environment:

        | Scenario               | Request                    | Response                                 |
        | ---------------------- | -------------------------- | ---------------------------------------- |
        | All organisations      | No parameters              | HTTP status 200 with all organisations   |
        | Single organisation    | `search`=`DN601`           | HTTP status 200 with single organisation |
        | No organisations found | `search`=`no-organisation` | HTTP status 200 with no organisations    |
        | Invalid API version    | No api-version parameter   | HTTP status 404 with problem description |

        You can try out the sandbox using the 'Try this API feature' on this page.

      parameters:
        - name: api-version
          description: |
            The API version number can be supplied as a query parameter. 
            
            Other API endpoint calls require a different API version number - these are highlighted in the [migration guide](https://digital.nhs.uk/developer/api-catalogue/electronic-transmission-of-prescriptions-web-services-soap/migrating-from-the-etp-web-services-soap-api-to-the-service-search-api).
          in: query
          schema:
            type: number
            default: 2
        - name: search
          in: query
          description: |
            The text to search for. All searchable fields are searched by default unless `searchFields` is specified. 
            
            When searching searchable fields, the search text itself is tokenized, so multiple terms can be separated by white space, for example `search=hello world`. 
            
            To match any term, use `*` which can be useful for boolean filter queries. Omitting this parameter has the same effect as setting it to `*`.
          schema:
            type: string
        - name: searchMode
          in: query
          description: Defaults to any. Specifies whether any or all of the search terms must be matched in order to count the document as a match.
          schema:
            type: string
            enum:
              - "any"
              - "all"
            default: "any"
        - name: searchFields
          in: query
          description: |
            A comma-separated list of field names to search for the specified text. This field works in conjunction with the `search` field.
          
            Example search field: `searchFields=ODSCode`
          schema:
            type: string
        - name: queryType
          description: |
            When set to simple, search text is interpreted using a simple query language that allows for symbols such as +, * and "".
            
            When the query type is set to full, search text is interpreted using the Lucene query language which allows field-specific and weighted searches.
            
            The following example is a search over independent terms, with a requirement that all matching documents include `pool`.
            
            For more information, see [Simple query syntax in Azure Cognitive Search](https://learn.microsoft.com/en-us/azure/search/query-simple-syntax).
            
            Example using simple query type:
            
            `queryType=simple`
            
            `search=budget hotel +pool`
            
            `searchMode=all`  
            
            This particular example shows in-field search and term boosting. It looks for hotels where the category field contains the term `budget`.
            
            Any documents containing the phrase `recently renovated` are ranked higher as a result of the term boost value.
            
            For more information, see [Lucene query syntax in Azure Cognitive Search](https://learn.microsoft.com/en-us/azure/search/query-lucene-syntax).
            
            Example using full query type:
            
            `queryType=full`
            
            `search=category:budget AND \'recently renovated\'^3`
            
            `searchMode=all`
            
          in: query
          schema:
            type: string
            enum:
              - "simple"
              - "full"
            default: "simple"
        - name: $skip
          description: The number of search results to skip. For example, `$skip:25` returns the entries after the first 25 entries in the search results.
          in: query
          schema:
            type: number
            format: int32
        - name: $top
          description: The number of search results to retrieve. The default is 50.
          in: query
          schema:
            type: number
            format: int32
            default: 50
        - name: $count
          description: |
            Optional, defaults to false. Specifies whether to fetch the total count of results. 
            
            This is the count of all documents that match the search and `$filter` parameters, ignoring `$top` and `$skip`. 
            
            Setting this value to true may have a performance impact. The count returned is an approximation. 
            
            If you’d like to get only the count without any documents, you can use `$top=0`.
          in: query
          schema:
            type: boolean
            default: false
        - name: $orderBy
          in: query
          description: |
            A list of comma-separated expressions to sort the results by. Each expression can be either a field name or a call to the `geo.distance()` function. 
            
            Each expression can be followed by `asc` to indicate ascending, and `desc` to indicate descending. The default is ascending order.
          
            This `$orderBy` routine orders the results by the distance from the geography point included in the expression. 
            
            The geography point can be a position from where you are and the results are ordered by how local the results are.
            
            For more information, see [Simple query syntax in Azure Cognitive Search](https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby).
            
            Example: 
            `$orderby=geo.distance(Geocode, geography'POINT(-0.76444095373153675 52.000820159912109)')`
          schema:
            type: string
        - name: $select
          in: query
          description: |
            A list of comma-separated fields to include in the result set. 
            
            If unspecified or set to *, all fields marked as retrievable in the schema are included in the projection.
            
            Example: `$select=ODSCode,OrganisationName,Contacts,Address1,Address2,Address3,City,Postcode,OrganisationSubType`
          schema:
            type: string
        - name: $filter
          in: query
          description: |
            A structured search expression in standard OData syntax.
            
            The `$filter` parameter specifies inclusion or exclusion criteria for returning matches in search results.
            
            For more information on using the `$filter`, see [OData $filter syntax in Azure Cognitive Search](https://learn.microsoft.com/en-us/azure/search/search-query-odata-filter).
            
            Examples:
            
            Filter results by Pharmacies that are EPS-enabled and classed as 'Community', that is, `ServiceCode` is `EPS0001`, `Organisation Type` is `PHA` and `Sub Type` is `Community`:
            
            `$filter=Services / any (x: x/ServiceCode eq 'EPS0001' ) and OrganisationTypeId eq 'PHA' and OrganisationSubType eq 'Community'`
            
            Filter results that match our postcode, that is `Postcode` field is `NG16`:
            
            `$filter=search.ismatch('NG16', 'Postcode')`
            
            Filter results by `Postcode` is `CW9` and `OrganisationTypeId" is a dentist:
            
            `$filter=search.ismatch('CW9', 'Postcode') and OrganisationTypeId eq 'DEN'`
            
            For details on organisation types and service codes, see [organisation and service codes](https://digital.nhs.uk/developer/api-catalogue/directory-of-healthcare-services/guide-to-search-identifiers-and-query-fields#organisation-and-service-codes).
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/SearchResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"

  "/search-postcode-or-place":
    # --------------------------------------------------------------------------------
    # POST /search-postcode-or-place
    # --------------------------------------------------------------------------------

    post:
      summary: Search for organisations by postcode or place
      operationId: search-postcode-or-place-POST
      description: |
        ## Overview
        Use this endpoint to search for information about services provided by NHS organisations, listed in the service search on the NHS website, filtered by postcode or place name.

        For more information on how to use search identifiers with this endpoint, see [DoHS API guide to search identifiers and service codes](https://digital.nhs.uk/developer/api-catalogue/directory-of-healthcare-services/guide-to-search-identifiers-and-service-codes).
        
        ## Sandbox test scenarios
        You can test the following scenarios in our sandbox environment:

        | Scenario               | Request                  | Response                                 |
        | ---------------------- | ------------------------ | ---------------------------------------- |
        | Place found            | `search`=`manchester`    | HTTP status 200 with 2 locations         |
        | Postcode found         | `search`=`WC1N 3JH`      | HTTP status 200 with 50 locations        |
        | Postcode not found     | `search`=`LS42PB`        | HTTP status 500 with problem description |
        | No search parameter    | No search parameter      | HTTP status 500 with problem description |
        | Invalid API version    | No api-version parameter | HTTP status 404 with problem description |

        You can try out the sandbox using the 'Try this API feature' on this page.

      parameters:
        - name: api-version
          description: Specify the version of the API.  MUST be 2.
          in: query
          required: true
          schema:
            type: number
            default: 2
            enum: [ 2 ]
        - name: search
          description: |
            Search query term. 
            
            When searching searchable fields, the search text itself is tokenized, so multiple terms can be separated by white space, for example `search=hello world`.
            
            To match any term, use `*`. Omitting this parameter has the same effect as setting it to `*`.
          in: query
          required: true
          schema:
            type: string
        - name: latitude
          description: The latitude parameter for geospacial searches.
          in: query
          schema:
            type: number
        - name: longitude
          description: The longitude parameter for geospacial searches.
          in: query
          schema:
            type: number
      requestBody:
        description: To generate a response body visit http://api-bridge.azurewebsites.net/servicesearchguide. You can also read Microsoft's search documentation at https://docs.microsoft.com/en-us/rest/api/searchservice/search-documents
        content:
          "application/json":
            schema:
              type: object
              additionalProperties: true
      responses:
        "200":
          $ref: "#/components/responses/SearchPostcodeResults"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/organisationtypes":
    # --------------------------------------------------------------------------------
    # GET /organisationtypes
    # --------------------------------------------------------------------------------

    get:
      summary: Search for organisation types
      operationId: organisationtypes-GET
      description: |
        ## Overview
        Use this endpoint to get, filter or search the organisation types.

        For more information on how to use search identifiers with this endpoint, see [DoHS API guide to search identifiers and service codes](https://digital.nhs.uk/developer/api-catalogue/directory-of-healthcare-services/guide-to-search-identifiers-and-service-codes).
        
        ## Sandbox test scenarios
        You can test the following scenarios in our sandbox environment:

        | Scenario                    | Request                  | Response                                        |
        | --------------------------- | ------------------------ | ----------------------------------------------- |
        | All organisation types      | /                        | HTTP status 200 with all organisation types     |
        | Single organisation type    | `search`=`pharmacy`      | HTTP status 200 with a single organisation type |
        | No organisation types found | `search`=`nothing`       | HTTP status 200 with no organisation types      |
        | Invalid API version         | No api-version parameter | HTTP status 404 with problem description        |

        You can try out the sandbox using the 'Try this API feature' on this page.

      parameters:
        - name: api-version
          description: |
            The API version number can be supplied as a query parameter. This must be 1.
            
            Other API endpoint calls require a different API version number - these are highlighted in the [migration guide](https://digital.nhs.uk/developer/api-catalogue/electronic-transmission-of-prescriptions-web-services-soap/migrating-from-the-etp-web-services-soap-api-to-the-service-search-api).
          in: query
          schema:
            type: number
            default: 1
            enum: [ 1 ]
        - name: search
          in: query
          description: |
            The text to search for. All searchable fields are searched by default unless `searchFields` is specified. 
            
            When searching searchable fields, the search text itself is tokenized, so multiple terms can be separated by white space, for example `search=hello world`. 
            
            To match any term, use `*` which can be useful for boolean filter queries. Omitting this parameter has the same effect as setting it to `*`.
          schema:
            type: string
        - name: searchMode
          in: query
          description: Defaults to any. Specifies whether any or all of the search terms must be matched in order to count the document as a match.
          schema:
            type: string
            enum:
              - "any"
              - "all"
            default: "any"
        - name: searchFields
          in: query
          description: A comma-separated list of field names to search for the specified text.
          schema:
            type: string
        - name: queryType
          description: |
            When set to simple, search text is interpreted using a simple query language that allows for symbols such as +, * and "".
            
            When the query type is set to full, search text is interpreted using the Lucene query language which allows field-specific and weighted searches.
            
            The following example is a search over independent terms, with a requirement that all matching documents include `pool`.
            
            For more information, see [Simple query syntax in Azure Cognitive Search](https://learn.microsoft.com/en-us/azure/search/query-simple-syntax).
            
            Example using simple query type:
            
            `queryType=simple`
            
            `search=budget hotel +pool`
            
            `searchMode=all`  
            
            The next example shows in-field search and term boosting. It looks for hotels where the category field contains the term `budget`.
            
            Any documents containing the phrase `recently renovated` are ranked higher as a result of the term boost value.
            
            For more information, see [Lucene query syntax in Azure Cognitive Search](https://learn.microsoft.com/en-us/azure/search/query-lucene-syntax).
            
            Example using full query type:
            
            `queryType=full`
            
            `search=category:budget AND \'recently renovated\'^3`
            
            `searchMode=all`
            
            Allowed values: simple, full
             
          in: query
          schema:
            type: string
            enum:
              - "simple"
              - "full"
            default: "simple"
        - name: $skip
          description: The number of search results to skip. For example, `$skip:25` returns the entries after the first 25 entries in the search results.
          in: query
          schema:
            type: number
            format: int32
        - name: $top
          description: The number of search results to retrieve. The default is 50.
          in: query
          schema:
            type: number
            format: int32
            default: 50
        - name: $count
          description: |
            Optional, defaults to false. Specifies whether to fetch the total count of results. 
          
            This is the count of all documents that match the `search` and `$filter` parameters, ignoring `$top` and `$skip`. 
            
            Setting this value to true may have a performance impact. The count returned is an approximation. 
            
            If you’d like to get only the count without any documents, you can use `$top=0`.
          in: query
          schema:
            type: boolean
            default: false
        - name: $orderBy
          in: query
          description: |
            A list of comma-separated expressions to sort the results by. Each expression can be either a field name or a call to the `geo.distance()` function. 
            
            Each expression can be followed by `asc` to indicate ascending, and `desc` to indicate descending. The default is ascending order.
          
            This `$orderBy` routine orders the results by the distance from the geography point included in the expression.
            
            The geography point can be a position from where you are and the results are ordered by how local they are.
            
            For more information, see [Simple query syntax in Azure Cognitive Search](https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby).
            
            Example: 
            `$orderby=geo.distance(Geocode, geography'POINT(-0.76444095373153675 52.000820159912109)')`
            
          schema:
            type: string
        - name: $select
          in: query
          description:  |
            A list of comma-separated fields to include in the result set. 
            
            If unspecified or set to `*`, all fields marked as retrievable in the schema are included in the projection.
            
            Example: 
            `$select=ODSCode,OrganisationName,Contacts,Address1,Address2,Address3,City,Postcode,OrganisationSubType`
            
          schema:
            type: string
        - name: $filter
          in: query
          description: |
            A structured search expression in standard OData syntax.
            
            The `$filter` parameter specifies inclusion or exclusion criteria for returning matches in search results.
            
            For more information on using the `$filter`, see [OData $filter syntax in Azure Cognitive Search](https://learn.microsoft.com/en-us/azure/search/search-query-odata-filter).
            
            Examples:
            
            Filter results by pharmacies that are EPS-enabled and classed as 'community', that is, `ServiceCode` is `EPS0001` and  `OrganisationTypeID` is `PHA` and `SubType` is `Community`:
            
            `$filter=Services / any (x: x/ServiceCode eq 'EPS0001' ) and OrganisationTypeId eq 'PHA' and OrganisationSubType eq 'Community'`
            
            Filter results that match a postcode, that is `Postcode` field is `NG16`:
            
            `$filter=search.ismatch('NG16', 'Postcode')`
            
            Filter results by `Postcode` is `CW9` and `OrganisationTypeId` is a dentist:
            
            `$filter=search.ismatch('CW9', 'Postcode') and OrganisationTypeId eq 'DEN'`
            
            For details on organisation types and service codes, see [organisation and service codes](https://digital.nhs.uk/developer/api-catalogue/directory-of-healthcare-services/guide-to-search-identifiers-and-query-fields#organisation-and-service-codes).

          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/OrganisationTypeResults"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties: { }

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties: { }

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties: { }

    TooManyRequests:
      description: Too Many Requests
      content:
        application/json:
          schema:
            type: object
            properties: { }

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties: { }

    NotFound:
      description: Not found
      content:
        application/json:
          examples:
            OrganisationNotFound:
              $ref: "examples/organisations-not-found_v2.json"
          schema:
            type: object
            properties: { }

    SearchResponse:
      description: Search Response
      content:
        "application/json":
          examples:
            Organisations:
              $ref: "examples/organisations_v2.json"
            SingleItem:
              $ref: "examples/organisations-single_v2.json"
            NotFound:
              $ref: "examples/organisations-not-found_v2.json"
          schema:
            allOf:
              - $ref: "#/components/schemas/SearchResults"
              - type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: "#/components/schemas/Organisation"
    SearchPostcodeResults:
      description: Postcode search results
      content:
        "application/json":
          examples:
            SearchPostcodeV2:
              $ref: "examples/search-place_v2.json"
          schema:
            type: object
            properties:
              value:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    url:
                      type: string
                      format: uri

    OrganisationTypeResults:
      description: Organisation Type Search Results
      content:
        "application/json":
          examples:
            OrganisationTypes:
              $ref: "examples/organisation-types_v1.json"
            NotFound:
              $ref: "examples/organisation-types-not-found_v1.json"
            SingleItem:
              $ref: "examples/organisation-types-single-item_v1.json"
          schema:
            allOf:
              - $ref: "#/components/schemas/SearchResults"
              - type: "object"
                properties:
                  "value":
                    type: "array"
                    items:
                      $ref: "#/components/schemas/OrganisationType"

  schemas:
    SearchResult:
      type: object
      properties:
        "@search.score":
          type: "number"

    SearchResults:
      type: object
      properties:
        "@odata.context":
          type: string
          format: uri
        "@odata.count":
          type: number
          format: int32
        "@odata.next":
          type: string
          format: uri
        "value":
          type: array
          items:
            $ref: "#/components/schemas/SearchResult"

    Organisation:
      description: Organisation v2
      type: object
      properties:
        "ODSCode":
          type: string
        "OrganisationName":
          type: string
        "OrganisationTypeId":
          type: string
        "OrganisationType":
          type: string
        "OrganisationStatus":
          type: string
        "SummaryText":
          type: string
        "URL":
          type: string
          format: uri
        "Address1":
          type: string
        "Address2":
          type: string
        "Address3":
          type: string
        "City":
          type: string
        "County":
          type: string
        "Latitude":
          type: string
        "Longitude":
          type: string
        "Postcode":
          type: string
        "Geocode":
          $ref: "#/components/schemas/Geocode"
        "Phone":
          type: string
        "Email":
          type: string
        "Website":
          type: string
          format: uri
        "OrganisationSubType":
          type: string
        "OrganisationAliases":
          $ref: "#/components/schemas/StringArray"
        "ParentOrganisation":
          $ref: "#/components/schemas/OrganisationReference"
        "Services":
          $ref: "#/components/schemas/StringArray"
        "OpeningTimes":
          $ref: "#/components/schemas/OpeningTimes"
        "Contacts":
          $ref: "#/components/schemas/ContactList"
        "Facilities":
          $ref: "#/components/schemas/FacilityList"
        "Staff":
          $ref: "#/components/schemas/StaffList"
        "GSD":
          type: string
        "LastUpdatedDates":
          type: object
          additionalProperties:
            type: string
            format: date-time
        "AcceptingPatients":
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Acceptance"
        "CCG":
          type: string
        "RelatedIAPTCCGs":
          $ref: "#/components/schemas/StringArray"
        "CCGLocalAuthority":
          $ref: "#/components/schemas/StringArray"
        "Trusts":
          $ref: "#/components/schemas/StringArray"
        "Metrics":
          $ref: "#/components/schemas/MetricList"

    OrganisationType:
      description: Organisation Types
      type: object
      properties:
        "OrganisationTypeID":
          type: string
        "OrganisationTypeName":
          type: string
        "IsDeleted":
          type: boolean
        "DisplayName":
          type: string

    Metric:
      type: object
      properties:
        "MetricID":
          type: number
        "MetricName":
          type: string
        "DisplayName":
          type: string
        "Description":
          type: string
        "Value":
          type: string
        "Value2":
          type: string
        "Value3":
          type: string
        "Text":
          type: string
        "LinkUrl":
          type: string
        "LinkText":
          type: string
        "MetricDisplayTypeID":
          type: number
        "MetricDisplayTypeName":
          type: string
        "HospitalSectorType":
          type: string
        "MetricText":
          type: string
        "DefaultText":
          type: string
        "IsMetaMetric":
          type: string
        "BandingClassification":
          type: string
        "BandingName":
          type: string

    MetricList:
      type: array
      items:
        $ref: "#/components/schemas/Metric"

    Acceptance:
      type: object
      properties:
        "Id":
          type: number
        "Name":
          type: string
        "AcceptingPatients":
          type: boolean

    OrganisationReference:
      type: object
      properties:
        "ODSCode":
          type: string
        "OrganisationName":
          type: string

    Facility:
      type: object
      properties:
        "Id":
          type: number
        "Name":
          type: string
        "Value":
          type: string
        "FacilityGroupName":
          type: string

    FacilityList:
      type: array
      items:
        $ref: "#/components/schemas/Facility"

    Staff:
      type: object
      properties:
        "Title":
          type: string
        "GivenName":
          type: string
        "FamilyName":
          type: string
        "Role":
          type: string
        "Qualification":
          type: string

    StaffList:
      type: array
      items:
        $ref: "#/components/schemas/Staff"

    Contact:
      type: object
      properties:
        "ContactType":
          type: string
        "ContactAvailabilityType":
          type: string
        "ContactMethodType":
          type: string
        "ContactValue":
          type: string

    ContactList:
      type: array
      items:
        $ref: "#/components/schemas/Contact"

    OpeningTimes:
      type: array
      items:
        type: object
        properties:
          "Weekday":
            type: string
            enum:
              - "Monday"
              - "Tuesday"
              - "Wednesday"
              - "Thursday"
              - "Friday"
              - "Saturday"
              - "Sunday"
          "Times":
            type: string
            example: "08:00-18:30"
          "OffsetOpeningTime":
            description: Minutes past midnight
            type: number
            example: 480
          "OffsetClosingTime":
            description: Minutes past midnight
            type: number
            example: 1110
          "OpeningTimeType":
            type: string
          "AdditionalOpeningDate":
            type: string
          "IsOpen":
            type: boolean

    JsonEncodedString:
      type: string

    StringArray:
      type: array
      items:
        type: string

    Geocode:
      description: "Geocode"
      type: object
      properties:
        "type":
          type: string
        "coordinates":
          type: array
          items:
            type: number
          minLength: 2
          maxLength: 2
        "crs":
          $ref: "#/components/schemas/CoordinateReferenceSystem"

    CoordinateReferenceSystem:
      description: Co-ordinate reference system
      type: object
      properties:
        "type":
          type: string
        "properties":
          type: object
          additionalProperties: true
      example: '{ "type": "name", "properties": { "name": "EPSG:4326" } }'
  securitySchemes:
    OAuth_Token:
      type: http
      scheme: bearer
